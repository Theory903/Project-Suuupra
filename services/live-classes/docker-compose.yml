version: '3.8'

services:
  live-classes:
    build: .
    ports:
      - "8086:8086"
      - "40000-49999:40000-49999/udp"  # MediaSoup RTC ports
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://liveuser:livepass@postgres:5432/live_classes_db
      - REDIS_URL=redis://redis:6379/3
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - S3_BUCKET_NAME=suuupra-live-recordings
      - S3_REGION=us-west-2
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - MEDIASOUP_ANNOUNCED_IP=127.0.0.1
    depends_on:
      - postgres
      - redis
      - minio
    volumes:
      - ./recordings:/recordings
    networks:
      - live-classes-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=live_classes_db
      - POSTGRES_USER=liveuser
      - POSTGRES_PASSWORD=livepass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - live-classes-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - live-classes-network

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - live-classes-network

  # Monitoring stack
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - live-classes-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - live-classes-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - live-classes-network

  # TURN server for WebRTC
  coturn:
    image: coturn/coturn:latest
    ports:
      - "3478:3478"
      - "3478:3478/udp"
      - "5349:5349"
      - "5349:5349/udp"
      - "49152-65535:49152-65535/udp"
    environment:
      - TURN_USERNAME=suuupra
      - TURN_PASSWORD=suuupra-turn-secret
    command: |
      -n
      -u suuupra:suuupra-turn-secret
      -v
      -f
      -a
      -o
      -r suuupra.com
      -p 3478
      --min-port=49152
      --max-port=65535
    networks:
      - live-classes-network

volumes:
  postgres_data:
  redis_data:
  minio_data:
  prometheus_data:
  grafana_data:

networks:
  live-classes-network:
    driver: bridge

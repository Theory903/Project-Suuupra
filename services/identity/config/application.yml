server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api/v1

spring:
  application:
    name: suuupra-identity-service
  
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:identity}
    username: ${POSTGRES_USER:identity}
    password: ${POSTGRES_PASSWORD:identity123}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 25
  
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: 9
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 50
        max-idle: 10
        min-idle: 5

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080}

logging:
  level:
    com.suuupra.identity: ${LOG_LEVEL:INFO}
    org.springframework.security: DEBUG
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,info,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

jwt:
  secret: ${JWT_SECRET:identity-super-secret-key-that-should-be-very-long}
  expiration: ${JWT_EXPIRATION:3600000}  # 1 hour in milliseconds
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}  # 7 days in milliseconds
  issuer: ${JWT_ISSUER:suuupra-identity}
  audience: ${JWT_AUDIENCE:suuupra-platform}

password:
  encoder:
    strength: 12
  validation:
    min-length: 8
    require-uppercase: true
    require-lowercase: true
    require-digit: true
    require-special-char: true

rate-limiting:
  login:
    requests-per-minute: 5
    burst-capacity: 10
  registration:
    requests-per-minute: 2
    burst-capacity: 5
  general:
    requests-per-minute: 100
    burst-capacity: 200

security:
  cors:
    allowed-origins: ${CORS_ORIGINS:*}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    exposed-headers: "X-Total-Count,X-Request-ID"
  
  session:
    timeout-minutes: 30
    max-concurrent-sessions: 5

features:
  email-verification: true
  password-reset: true
  two-factor-auth: false
  social-login: false

notifications:
  email:
    enabled: true
    smtp:
      host: ${SMTP_HOST:localhost}
      port: ${SMTP_PORT:587}
      username: ${SMTP_USERNAME:}
      password: ${SMTP_PASSWORD:}
      auth: true
      starttls: true
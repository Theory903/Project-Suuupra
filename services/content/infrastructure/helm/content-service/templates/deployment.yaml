apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "content-service.fullname" . }}
  labels:
    app: {{ include "content-service.name" . }}
    chart: {{ include "content-service.chart" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "content-service.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "content-service.name" . }}
    spec:
      containers:
        - name: content-service
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: http
            - containerPort: {{ .Values.service.metricsPort }}
              name: metrics
          env:
            - name: PORT
              value: "{{ .Values.service.port }}"
            - name: PROMETHEUS_METRICS_PORT
              value: "{{ .Values.service.metricsPort }}"
            - name: ENABLE_BACKGROUND_JOBS
              value: "{{ .Values.env.ENABLE_BACKGROUND_JOBS }}"
            - name: NODE_ENV
              value: "{{ .Values.env.NODE_ENV }}"
            - name: LOG_LEVEL
              value: "{{ .Values.env.LOG_LEVEL }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}


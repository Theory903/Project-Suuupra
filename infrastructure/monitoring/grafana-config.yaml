# Production Grafana Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 2
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      serviceAccountName: grafana
      securityContext:
        runAsNonRoot: true
        runAsUser: 472
        fsGroup: 472
      containers:
      - name: grafana
        image: grafana/grafana:10.2.0
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: admin
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: admin-password
        - name: GF_DATABASE_TYPE
          value: postgres
        - name: GF_DATABASE_HOST
          value: postgres.production.svc.cluster.local:5432
        - name: GF_DATABASE_NAME
          value: grafana
        - name: GF_DATABASE_USER
          value: grafana
        - name: GF_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: database-password
        - name: GF_SESSION_PROVIDER
          value: redis
        - name: GF_SESSION_PROVIDER_CONFIG
          value: addr=redis.production.svc.cluster.local:6379,pool_size=100,db=grafana
        - name: GF_SECURITY_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: secret-key
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_USERS_AUTO_ASSIGN_ORG
          value: "true"
        - name: GF_USERS_AUTO_ASSIGN_ORG_ROLE
          value: Viewer
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "false"
        - name: GF_AUTH_OAUTH_AUTO_LOGIN
          value: "true"
        - name: GF_AUTH_GENERIC_OAUTH_ENABLED
          value: "true"
        - name: GF_AUTH_GENERIC_OAUTH_NAME
          value: "Suuupra SSO"
        - name: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: oauth-client-id
        - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: oauth-client-secret
        - name: GF_AUTH_GENERIC_OAUTH_SCOPES
          value: openid profile email
        - name: GF_AUTH_GENERIC_OAUTH_AUTH_URL
          value: https://identity.suuupra.com/oauth/authorize
        - name: GF_AUTH_GENERIC_OAUTH_TOKEN_URL
          value: https://identity.suuupra.com/oauth/token
        - name: GF_AUTH_GENERIC_OAUTH_API_URL
          value: https://identity.suuupra.com/oauth/userinfo
        - name: GF_SERVER_DOMAIN
          value: grafana.suuupra.com
        - name: GF_SERVER_ROOT_URL
          value: https://grafana.suuupra.com
        - name: GF_SMTP_ENABLED
          value: "true"
        - name: GF_SMTP_HOST
          value: smtp.suuupra.com:587
        - name: GF_SMTP_USER
          value: grafana@suuupra.com
        - name: GF_SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: smtp-password
        - name: GF_SMTP_FROM_ADDRESS
          value: grafana@suuupra.com
        - name: GF_ALERTING_ENABLED
          value: "true"
        - name: GF_UNIFIED_ALERTING_ENABLED
          value: "true"
        - name: GF_FEATURE_TOGGLES_ENABLE
          value: "ngalert"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-config
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboards-config
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards
        resources:
          requests:
            cpu: 1
            memory: 2Gi
          limits:
            cpu: 2
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-config
        configMap:
          name: grafana-config
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards-config
        configMap:
          name: grafana-dashboards-config
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards

---
# Grafana Datasources Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus-main.monitoring.svc.cluster.local:9090
      isDefault: true
      editable: false
      jsonData:
        timeInterval: 15s
        queryTimeout: 60s
        httpMethod: POST
    - name: Jaeger
      type: jaeger
      access: proxy
      url: http://jaeger-query.monitoring.svc.cluster.local:16686
      editable: false
    - name: Elasticsearch
      type: elasticsearch
      access: proxy
      url: http://elasticsearch.monitoring.svc.cluster.local:9200
      database: "logstash-*"
      editable: false
      jsonData:
        interval: Daily
        timeField: "@timestamp"
        esVersion: 8
    - name: Postgres
      type: postgres
      access: proxy
      url: postgres.production.svc.cluster.local:5432
      database: analytics_prod
      user: grafana_readonly
      editable: false
      secureJsonData:
        password: $POSTGRES_READONLY_PASSWORD

---
# Grafana Dashboard Provisioning
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
  namespace: monitoring
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: 'Suuupra Platform'
      type: file
      disableDeletion: false
      updateIntervalSeconds: 30
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards

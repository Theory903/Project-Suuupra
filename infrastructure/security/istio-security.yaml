# Istio Security Policies for mTLS and Authorization
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default
  namespace: production
spec:
  mtls:
    mode: STRICT

---
# API Gateway Authorization Policy
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: api-gateway-authz
  namespace: production
spec:
  selector:
    matchLabels:
      app: api-gateway
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
  - to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]

---
# Payment Service Authorization Policy (Strict)
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: payment-service-authz
  namespace: production
spec:
  selector:
    matchLabels:
      app: payment-service
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/production/sa/api-gateway"]
    - source:
        principals: ["cluster.local/ns/production/sa/commerce-service"]
  - to:
    - operation:
        methods: ["POST", "GET"]
        paths: ["/api/v1/payments/*", "/health", "/metrics"]

---
# Identity Service Authorization Policy
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: identity-service-authz
  namespace: production
spec:
  selector:
    matchLabels:
      app: identity-service
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/production/sa/api-gateway"]
  - to:
    - operation:
        methods: ["POST", "GET", "PUT"]
        paths: ["/api/v1/auth/*", "/api/v1/users/*", "/health", "/metrics", "/.well-known/jwks.json"]

---
# Database Access Authorization
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: database-access-authz
  namespace: production
spec:
  selector:
    matchLabels:
      component: database
  rules:
  - from:
    - source:
        principals: 
        - "cluster.local/ns/production/sa/identity-service"
        - "cluster.local/ns/production/sa/payment-service"
        - "cluster.local/ns/production/sa/commerce-service"
        - "cluster.local/ns/production/sa/analytics-service"

---
# Request Authentication for JWT Validation
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: jwt-auth
  namespace: production
spec:
  selector:
    matchLabels:
      require-jwt: "true"
  jwtRules:
  - issuer: "https://identity.suuupra.com"
    jwksUri: "https://identity.suuupra.com/.well-known/jwks.json"
    audiences: ["suuupra-api"]

---
# Authorization Policy for JWT-protected endpoints
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: jwt-protected-authz
  namespace: production
spec:
  selector:
    matchLabels:
      require-jwt: "true"
  rules:
  - from:
    - source:
        requestPrincipals: ["https://identity.suuupra.com/*"]
  - to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE"]

---
# Rate Limiting Policy
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: rate-limit-filter
  namespace: production
spec:
  workloadSelector:
    labels:
      app: api-gateway
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.local_ratelimit
        typed_config:
          "@type": type.googleapis.com/udpa.type.v1.TypedStruct
          type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          value:
            stat_prefix: rate_limiter
            token_bucket:
              max_tokens: 1000
              tokens_per_fill: 1000
              fill_interval: 60s
            filter_enabled:
              runtime_key: rate_limit_enabled
              default_value:
                numerator: 100
                denominator: HUNDRED
            filter_enforced:
              runtime_key: rate_limit_enforced
              default_value:
                numerator: 100
                denominator: HUNDRED

---
# Security Headers Policy
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: security-headers
  namespace: production
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: envoy.filters.network.http_connection_manager
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.lua
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
          inline_code: |
            function envoy_on_response(response_handle)
              response_handle:headers():add("X-Frame-Options", "DENY")
              response_handle:headers():add("X-Content-Type-Options", "nosniff")
              response_handle:headers():add("X-XSS-Protection", "1; mode=block")
              response_handle:headers():add("Strict-Transport-Security", "max-age=31536000; includeSubDomains")
              response_handle:headers():add("Content-Security-Policy", "default-src 'self'")
              response_handle:headers():add("Referrer-Policy", "strict-origin-when-cross-origin")
            end

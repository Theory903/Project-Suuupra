version: '3.8'

services:
  # Kafka 4.0 with KRaft (NO ZooKeeper!)
  kafka-kraft:
    image: apache/kafka:3.8.0
    container_name: suuupra-kafka-kraft
    hostname: kafka-kraft
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9999:9999"  # JMX for monitoring
    environment:
      # KRaft Configuration
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-kraft:9093
      
      # Listeners
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-kraft:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      
      # Storage
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      
      # Performance Settings (Production Tuned)
      KAFKA_NUM_NETWORK_THREADS: 8
      KAFKA_NUM_IO_THREADS: 8
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
      
      # Replication
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      
      # Compression
      KAFKA_COMPRESSION_TYPE: zstd
      
      # Retention
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      
      # JMX for monitoring
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: localhost
      
      # JVM Settings
      KAFKA_HEAP_OPTS: "-Xmx2G -Xms2G"
      KAFKA_OPTS: "-XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35"
    
    volumes:
      - kafka_kraft_data:/var/lib/kafka/data
      - kafka_kraft_logs:/var/log/kafka
    
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    
    command: >
      bash -c "
        # Format storage if not already formatted
        if [ ! -f /var/lib/kafka/data/meta.properties ]; then
          echo 'Formatting KRaft storage...'
          kafka-storage.sh format \
            --config /opt/kafka/config/server.properties \
            --cluster-id $(kafka-storage.sh random-uuid) \
            --ignore-formatted
        fi
        
        # Start Kafka
        echo 'Starting Kafka with KRaft...'
        kafka-server-start.sh /opt/kafka/config/server.properties
      "
    
    networks:
      - suuupra-network

  # Kafka UI for management
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: suuupra-kafka-ui
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: suuupra-kraft
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-kraft:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9999
    depends_on:
      kafka-kraft:
        condition: service_healthy
    networks:
      - suuupra-network

volumes:
  kafka_kraft_data:
    driver: local
  kafka_kraft_logs:
    driver: local

networks:
  suuupra-network:
    external: true
